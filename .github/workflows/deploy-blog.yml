# Workflow name
name: Deploy Static Frontend to GitHub Pages

on:
  push:
    branches: [ "main" ] 
  workflow_dispatch:

permissions:
  contents: write 

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x 
          cache: 'npm' 

      - name: Install Dependencies
        run: npm ci 

      - name: Build Project
        run: npm run build

      # --- NEW: Verify Build Output ---
      - name: List Build Artifacts
        run: |
          echo "--- Listing dist/ ---"
          ls -R dist || echo "dist/ directory not found."
          echo "--- Listing styles/ ---"
          ls -R styles || echo "styles/ directory not found."
          echo "--- Listing public/ ---"
          ls -R public || echo "public/ directory not found."
          echo "--- Listing data/ ---"
          ls -R data || echo "data/ directory not found."
      # --- End Verification Step ---

      # Step 5: Prepare deployment directory ('docs' folder)
      - name: Prepare Deployment Directory
        run: |
          # Clean up and create the docs directory structure
          rm -rf docs
          mkdir -p docs/dist/client docs/styles docs/images docs/js
          
          echo "Copying files to docs/ ..."
          
          # Copy HTML files
          cp -v public/*.html docs/ || echo "No HTML files found in public/, skipping."
          
          # Copy CSS files with explicit verification
          echo "Copying CSS files..."
          if [ -d "styles" ]; then
            cp -rv styles docs/ || echo "Failed to copy styles directory"
            # Also copy individual CSS files to the root (flat structure)
            find styles -name "*.css" -exec cp -v {} docs/ \; || echo "No individual CSS files found"
          else
            echo "No styles directory found"
          fi
          
          # Copy JavaScript with explicit verification
          echo "Copying JavaScript files..."
          # Check for client.bundle.js specifically
          if [ -f "dist/client/client.bundle.js" ]; then
            cp -v dist/client/client.bundle.js docs/ || echo "Failed to copy client.bundle.js"
          else
            echo "client.bundle.js not found in dist/client/"
          fi
          # Copy all JS files from dist/client to docs/dist/client
          if [ -d "dist/client" ]; then
            cp -rv dist/client/*.js docs/dist/client/ || echo "No JS files in dist/client"
            # Also copy JS files to root
            cp -v dist/client/*.js docs/ || echo "No JS files to copy to root"
          fi
          
          # Copy image files from multiple possible locations
          echo "Copying image files..."
          if [ -d "public/images" ]; then
            cp -rv public/images/* docs/images/ || echo "Failed to copy from public/images"
          fi
          if [ -d "images" ]; then
            cp -rv images/* docs/images/ || echo "Failed to copy from images directory"
          fi
          
          # Copy background image with explicit checks
          echo "Locating background.jpg..."
          find . -name "background.jpg" -not -path "./docs/*" -not -path "./node_modules/*" -exec cp -v {} docs/ \; || echo "No background.jpg found"
          
          # Copy data files
          echo "Copying data files..."
          mkdir -p docs/data
          if [ -d "data" ]; then
            cp -rv data/*.json docs/data/ || echo "No JSON data files found"
          fi
          
          echo "Finished copying files."
          echo "--- Listing final docs/ contents ---"
          ls -la docs
          find docs -type f | sort

      # Step 6: Fix paths in HTML files for GitHub Pages
      - name: Fix HTML Paths
        run: |
          echo "Fixing paths in HTML files..."
          # Basic path fixes
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|href="/|href="|g'
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|src="/|src="|g'
          
          # Fix references to stylesheets
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|href="styles/|href="./styles/|g'

      # Step 7: Fix paths in CSS files within 'docs' directory (Basic Example)
      - name: Fix CSS Paths (Basic)
        run: |
          echo "Fixing basic paths in CSS files..."
          find docs/styles/ -name '*.css' -print0 | xargs -0 sed -i 's|url(/|url(../|g' 
          echo "Basic CSS paths adjusted."

      # Step 8: Deploy the 'docs' folder to the 'gh-pages' branch
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
