# Workflow name
name: Deploy Static Frontend to GitHub Pages

on:
  push:
    branches: [ "main" ] 
  workflow_dispatch:

permissions:
  contents: write 

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x 
          cache: 'npm' 

      - name: Install Dependencies
        run: npm ci 

      - name: Build Project
        run: npm run build

      # --- NEW: Verify Build Output ---
      - name: List Build Artifacts
        run: |
          echo "--- Listing dist/ ---"
          ls -R dist || echo "dist/ directory not found."
          echo "--- Listing styles/ ---"
          ls -R styles || echo "styles/ directory not found."
          echo "--- Listing public/ ---"
          ls -R public || echo "public/ directory not found."
          echo "--- Listing data/ ---"
          ls -R data || echo "data/ directory not found."
      # --- End Verification Step ---

      # Step 5: Prepare deployment directory ('docs' folder)
      - name: Prepare Deployment Directory
        run: |
          # Create the docs directory and subdirectories
          mkdir -p docs/dist/client docs/styles docs/images
          
          echo "Copying files to docs/ ..."
          
          # Copy HTML files
          cp public/*.html docs/ || echo "No HTML files found in public/, skipping."
          
          # Copy CSS files (to both locations for compatibility)
          cp -r styles/* docs/styles/ || echo "No styles found, skipping."
          # Also copy to root for paths without prefix
          cp styles/*.css docs/ || echo "No CSS files found, skipping."
          
          # Copy JavaScript bundle
          cp dist/client/*.js docs/dist/client/ || echo "No JS files found in dist/client, skipping."
          # Also copy to root for direct references
          cp dist/client/*.js docs/ || echo "No JS files found, skipping."
          
          # Copy image files from multiple possible locations
          cp -r public/images/* docs/images/ 2>/dev/null || echo "No images in public/images/, skipping."
          cp -r images/* docs/images/ 2>/dev/null || echo "No images/ directory, skipping."
          
          # Copy background images that might be referenced directly
          find . -name "background.jpg" -exec cp {} docs/ \; 2>/dev/null || echo "No background.jpg found."
          
          # Copy data files
          mkdir -p docs/data
          cp -r data/*.json docs/data/ 2>/dev/null || echo "No JSON data files found, skipping."
          
          echo "Finished copying files."
          echo "--- Listing final docs/ contents ---"
          ls -R docs 

      # Step 6: Fix paths in HTML files for GitHub Pages
      - name: Fix HTML Paths
        run: |
          echo "Fixing paths in HTML files..."
          # Basic path fixes
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|href="/|href="|g'
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|src="/|src="|g'
          
          # Fix references to stylesheets
          find docs/ -name '*.html' -print0 | xargs -0 sed -i 's|href="styles/|href="./styles/|g

      # Step 7: Fix paths in CSS files within 'docs' directory (Basic Example)
      - name: Fix CSS Paths (Basic)
        run: |
          echo "Fixing basic paths in CSS files..."
          find docs/styles/ -name '*.css' -print0 | xargs -0 sed -i 's|url(/|url(../|g' 
          echo "Basic CSS paths adjusted."

      # Step 8: Deploy the 'docs' folder to the 'gh-pages' branch
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
